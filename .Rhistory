map('state')
points(x = -86.66617067999999, y = 36.46820849, col = "red", cex = .1 )
map('world')
points(x = -86.66617067999999, y = 36.46820849, col = "red", cex = .1 )
map('usa')
map('states')
points(x = -86.66617067999999, y = 36.46820849, col = "red", pch = 19, cex = 1.0 )
map('states')
map('state')
points(x = -86.66617067999999, y = 36.46820849, col = "red", pch = 19, cex = 1.0 )
states_map <- map_data('state')
plot(states_map)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
library(maps)
LatLong <- read.csv("~/Documents/School/Computing/Twitter-EmotiMap/LatLong.csv", header=F)
PercentLit <- read.csv("~/Documents/School/Computing/Twitter-EmotiMap/PercentLit.csv", header=F)
map('usa')
map('states')
map('state')
points(x = -86.66617067999999, y = 36.46820849, col = "red", pch = 19, cex = 1.0 )
points(x = LatLong$V1, y = LatLong$V2, col = rgb(runif(5),runif(5),runif(5)) , pch = 20, cex = 1.0)
points(x = LatLong$V1, y = LatLong$V2, col = rgb(runif(5),runif(5),runif(5)) , pch = 20, cex = 1.0)
points(x = LatLong$V1, y = LatLong$V2, col = rgb(runif(5),runif(5),runif(5)) , pch = 20, cex = 1.0)
points(x = LatLong$V1, y = LatLong$V2, col = rgb(runif(5),runif(5),runif(5)) , pch = 20, cex = 1.0)
points(x = LatLong$V1, y = LatLong$V2, col = rgb(runif(5),runif(5),runif(5)) , pch = 20, cex = 1.0)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
plot(states_map)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
library(OpenStreetMap)
library(rgdal)
map <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
plot(map)
map('usa')
states_map <- map_data('state')
plot(states_map)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
library(maps)
library(OpenStreetMap)
library(rgdal)
map <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
plot(map)
map('usa')
map <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
plot(map)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
states_map <- map_data('state')
plot(states_map)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
library(OpenStreetMap)
library(rgdal)
library(ggplot2)
map <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
plot(map)
map('usa')
states_map <- map_data('state')
plot(states_map)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
mp <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'stamen-watercolor')
mp_bing <- openmap(c(53.38332836757155,-130.517578125),
c(15.792253570362446,-67.939453125),4,'bing')
states_map <- map_data("state")
states_map_merc <- as.data.frame(
projectMercator(states_map$lat,states_map$long))
states_map_merc$region <- states_map$region
states_map_merc$group <- states_map$group
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
p <- autoplot(mp,expand=FALSE) + geom_polygon(aes(x=x,y=y,group=group),
data=states_map_merc,fill="black",colour="black",alpha=.1) + theme_bw()
print(p)
p <- autoplot(mp_bing) + geom_map(aes(x=-10000000,y=4000000,map_id=state,fill=Murder),
data=crimes,map=states_map_merc)
print(p)
Sys.setenv(NOAWT = 1)
Sys.setenv(NOAWT = 1)
library(OpenStreetMap)
library(rgdal)
library(stringr)
library(ggplot2)
#Set Working Directory
setwd("~/Documents/School/Computing/Twitter-EmotiMap/")
LatLong <- read.csv(LatLong.csv)
setwd("~/Documents/School/Computing/Twitter-EmotiMap/")
#Get geo location of tweets and the percent of literacy of the tweets
LatLong <- read.csv(LatLong.csv)
LatLong <- read.csv("LatLong.csv")
PercentLit <- read.csv("PercentLit.csv")
points(x = LatLong$V1, y = LatLong$V2, col = rgb(runif(5),runif(5),runif(5)) , pch = 20, cex = 1.0)
geoFrame <- data.frame("Lattitude" = LatLong[1])
geoFrame <- data.frame("Lat" = LatLong[1], "Long" = LatLong[2], "PercLit" = PercentLit)
print(geoFrame$Long[1])
print(geoFrame$Long)
help dataframe
data.frame --help
data.frame -help
data.frame help
help
is.data.frame(geoFrame)
print(geoFrame$Long)
print(geoFrame[1])
print(geoFrame[2])
print(geoFrame[3])
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
names(geoFrame)[3] <- "PercLit"
print(geoFrame$Lat[1])
geoFrame.LatLong <- cbind(geoFrame.LatLong, projectMercator(geoFrame.LatLong$lat, LatLong$long))
geoFrame <- cbind(geoFrame, projectMercator(geoFrame$Lat, geoFrame$Long))
geoFrame <- cbind(geoFrame, projectMercator(geoFrame$Lat, geoFrame$Long))
geoFrame$Lat <- projectMercator(geoFrame$Lat)
geoFrame <- projectMercator(geoFrame$Lat, geoFrame%Long)
geoFrame <- projectMercator(geoFrame$Lat, geoFrame$Long)
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812), zoom = 6, type = "stamen-watercolor")
autoplot(MapUS)
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812), zoom = 6, type = "osm")
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812), type = "osm")
map <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
plot(map)
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
autoplot(MapUS)
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
autoplot(MapUS)
Sys.setenv(NOAWT = 1)
library(OpenStreetMap)
library(rgdal)
library(stringr)
library(ggplot2)
#Set Working Directory
setwd("~/Documents/School/Computing/Twitter-EmotiMap/")
#Get geo location of tweets and the percent of literacy of the tweets
LatLong <- read.csv("LatLong.csv")
PercentLit <- read.csv("PercentLit.csv")
#Create data frame for all geo location of all tweets with literacy score
geoFrame <- data.frame("Lat" = LatLong[1], "Long" = LatLong[2], "PercLit" = PercentLit)
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
names(geoFrame)[3] <- "PercLit"
#Plot Map of the US, future types could be specified with the following command
# MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812), type = "osm)
#or instead of "osm" we could use "stamen-watercolor", or "stamen-mars", or "stamen-toner"
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
autoplot(MapUS + geom_point(aes(x,y)))
autoplot(MapUS) + geom_point(aes(x,y))
autoplot(MapUS) + geom_point(aes(x,y), alpha = I(8/10), data = geoFrame)
autoplot(MapUS) + geom_point(data = geoFrame)
map <- autoplot(MapUS)
map
map + geom_point(data = geoFrame, aex(x = geoFrame$Lat, y = geoFrame$Long), size = 5)
map + geom_point(data = geoFrame, aes(x = geoFrame$Lat, y = geoFrame$Long), size = 5)
map <- ggmap(MapUS)
map + geom_point(data = geoFrame, aes(x = geoFrame$Lat, y = geoFrame$Long), size = 5)
library(ggmap)
map <- ggplot(MapUS)
install.packages("ggmap")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library(ggmap)
map <- ggmap(MapUS)
map + geom_point(data = geoFrame, aes(x = geoFrame$Lat, y = geoFrame$Long), size = 5)
map <- openproj(MapUS)
map# + geom_point(data = geoFrame, aes(x = geoFrame$Lat, y = geoFrame$Long), size = 5)
map
map <- autoplot(MapUS)
map
geoFrame <- data.frame("Lat" = LatLong[1], "Long" = LatLong[2])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
geoMercFrame <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long))
map <- autoplot(MapUS, expand = FALSE) + geom_points(data = GeoFrame)
map <- autoplot(MapUS, expand = FALSE) + geom_point(data = GeoFrame)
map <- autoplot(MapUS, expand = FALSE) + geom_point(data = geoFrame)
map
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x, y), data = geoFrame)
map
autoplot(MapUS) + geom_point(aes(x, y), data = geoFrame)
autoplot(MapUS) + geom_point(data = geoFrame)
autoplot(MapUS) + geom_point(data = geoFrame)
autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = LatLong)
autoplot(MapUS) + geom_point(aes(x = geoFrame$Lat, y = geoFrame$long), data = geoFrame)
autoplot(MapUS) + geom_point(aes(x = geoFrame$Lat, y = geoFrame$Long), data = geoFrame)
autoplot(MapUS)
geoFrame <- data.frame(Lat = LatLong[1], Long = LatLong[2])
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = geoFrame)
coords <- cbind(coords, geoFrame)
geoFrame.coords <- cbind(geoFrame$Lat, geoFrame$Long)
geoFrame.coords <- cbind(geoFrame)
View(geoFrame.coords)
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = data.frame(geoFrame.coords)
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = data.frame(geoFrame.coords))
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = data.frame(geoFrame.coords))
map
geoFrame <- data.frame(Lat = LatLong[1], Long = LatLong[2])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = geoFrame)
map
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long))
geoFrame <- data.frame(Lat = LatLong[2], Long = LatLong[1])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long))
geoFrame.coords <- cbind(geoFrame)
MapUS <- openmap(c(49.3457868,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = geoFrame)
map
MapUS <- openmap(c(50,-125), c(25,-67))
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = geoFrame)
map
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
names(geoMerc)[1] <- "Lat"
names(geoMerc)[2] <- "Long"
MapUS <- openmap(c(49.345786,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
View(geoFrame)
View(geoMerc)
map("world")
library(maps)
map("world")
points(x = geoFrame$Lat, y = geoFrame$Long)
points(x = geoFrame$Long, y = geoFrame$Lat)
map("world")
points(x = geoFrame$Long, y = geoFrame$Lat)
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
map("us")
map("usa")
points(x = geoFrame$Long, y = geoFrame$Lat)
Sys.setenv(NOAWT = 1)
library(OpenStreetMap)
library(rgdal)
library(stringr)
library(ggplot2)
library(ggmap)
library(maps)
#Set Working Directory
setwd("~/Documents/School/Computing/Twitter-EmotiMap/")
#Get geo location of tweets and the percent of literacy of the tweets
LatLong <- read.csv("LatLong.csv")
PercentLit <- read.csv("PercentLit.csv")
#Create data frame for all geo location of all tweets with literacy score
geoFrame <- data.frame(Lat = LatLong[2], Long = LatLong[1])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
map("usa")
points(x = geoFrame$Long, y = geoFrame$Lat)
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
names(geoMerc)[1] <- "Lat"
names(geoMerc)[2] <- "Long"
MapUS <- openmap(c(49.345786,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
View(geoMerc)
View(geoFrame)
LatLong <- read.csv("LatLong.csv")
PercentLit <- read.csv("PercentLit.csv")
#Create data frame for all geo location of all tweets with literacy score
geoFrame <- data.frame(Lat = LatLong[2], Long = LatLong[1])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
map("usa")
points(x = geoFrame$Long, y = geoFrame$Lat)
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
names(geoMerc)[1] <- "Lat"
names(geoMerc)[2] <- "Long"
MapUS <- openmap(c(49.345786,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
LatLong <- read.csv("LatLong.csv")
PercentLit <- read.csv("PercentLit.csv")
#Create data frame for all geo location of all tweets with literacy score
geoFrame <- data.frame(Lat = LatLong[2], Long = LatLong[1])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
map("usa")
points(x = geoFrame$Long, y = geoFrame$Lat)
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
names(geoMerc)[1] <- "Lat"
names(geoMerc)[2] <- "Long"
MapUS <- openmap(c(49.345786,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
LatLong <- read.csv("LatLong.csv")
PercentLit <- read.csv("PercentLit.csv")
#Create data frame for all geo location of all tweets with literacy score
geoFrame <- data.frame(Lat = LatLong[2], Long = LatLong[1])
#Label the Columns of the geoFrame for easy calling into that data frame
names(geoFrame)[1] <- "Lat"
names(geoFrame)[2] <- "Long"
map("usa")
points(x = geoFrame$Long, y = geoFrame$Lat)
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
names(geoMerc)[1] <- "Lat"
names(geoMerc)[2] <- "Long"
MapUS <- openmap(c(49.345786,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
for i in (1:5845){
if(geoMerc$Lat > 0){
geoMerc<- geoMerc(-c(i))
}
for i in (1:5845){
if(geoMerc$Lat[i] > 0){
geoMerc<- geoMerc(-c(i))
}
for (i in 1:5845){
if(geoMerc$Lat[i] > 0){
geoMerc<- geoMerc(-c(i))
}
}
map("usa")
points(x = geoFrame$Long, y = geoFrame$Lat)
geoMerc <- as.data.frame(projectMercator(geoFrame$Lat, geoFrame$Long), drop = FALSE)
for (i in 1:5845){
if(geoMerc$Lat[i] > 0){
geoMerc<- geoMerc(-c(i))
}
}
names(geoMerc)[1] <- "Lat"
names(geoMerc)[2] <- "Long"
MapUS <- openmap(c(49.345786,-124.794409), c(24.7433195,-66.9513812))
map <- autoplot(MapUS, expand = FALSE) + geom_point(aes(x = Lat, y = Long), data = geoMerc, color = 'red', size = 5, alpha = 1)
map
